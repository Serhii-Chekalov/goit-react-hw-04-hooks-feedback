{"version":3,"sources":["components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["Text","styled","p","TotalNumber","span","Number","Statistic","good","neutral","bad","total","positivePercentage","ButtonStyle","button","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Title","h2","Section","title","children","Notification","message","App","state","props","handleIncrement","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAEaA,EAAOC,IAAOC,EAAV,6EAMJC,EAAcF,IAAOG,KAAV,gDAIXC,EAASJ,IAAOG,KAAV,gD,OCRNE,EAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,KACAC,EAFuB,EAEvBA,QACAC,EAHuB,EAGvBA,IACAC,EAJuB,EAIvBA,MACAC,EALuB,EAKvBA,mBALuB,OAOvB,gCACE,eAACX,EAAD,mBACQ,IACN,cAAC,EAAD,UACE,cAACG,EAAD,UAAcI,SAGlB,eAACP,EAAD,sBACW,IACT,cAAC,EAAD,UACE,cAACG,EAAD,UAAcK,SAGlB,eAACR,EAAD,kBACO,IACL,cAAC,EAAD,UACE,cAACG,EAAD,UAAcM,SAGlB,eAACT,EAAD,qBACS,cAAC,EAAD,UAASU,OAElB,eAACV,EAAD,iCACqB,eAAC,EAAD,WAASW,EAAT,cChCZC,EAAcX,IAAOY,OAAV,+RCEXC,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OAC7BD,EAAQE,KAAI,SAACC,GAAD,OACV,cAACN,EAAD,CACEO,KAAK,SAELC,QAAS,kBAAMJ,EAAgBE,IAHjC,SAKGA,GAHIA,OCNEG,EAAQpB,IAAOqB,GAAV,yFCELC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACrB,qCACE,cAACJ,EAAD,UAAQG,IACR,8BAAMC,QCLGzB,EAAOC,IAAOC,EAAV,oECEJwB,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,cAAC,EAAD,UAAOA,KCE9CC,E,4MACJC,MAAQ,CACNtB,KAAM,EAAKuB,MAAMvB,KACjBC,QAAS,EAAKsB,MAAMtB,QACpBC,IAAK,EAAKqB,MAAMrB,K,EAGlBsB,gBAAkB,SAACb,GACjB,EAAKc,UAAS,SAACC,GACb,OAAO,eACJf,EAASe,EAAUf,GAAU,O,EAKpCgB,mBAAqB,WACnB,MAA+B,EAAKL,MACpC,OADA,EAAQtB,KAAR,EAAcE,IAAd,EAAmBD,S,EAIrB2B,gCAAkC,WAChC,MAA+B,EAAKN,MAA5BtB,EAAR,EAAQA,KACFG,EAAQH,EADd,EAAcC,QAAd,EAAuBC,IAEvB,OAAO2B,KAAKC,MAAc,IAAP9B,EAAcG,I,4CAGnC,WACE,MAA+B4B,KAAKT,MAA5BtB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,gCACE,cAAC,EAAD,CAASe,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBsB,KAAKP,oBAGzBxB,GAAQC,GAAWC,EAAM,EACxB,cAAC,EAAD,CAASe,MAAM,YAAf,SACE,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,KAAKJ,qBACZvB,mBAAoB2B,KAAKH,sCAI7B,cAAC,EAAD,CAAcR,QAAQ,6B,GA/CdY,aAsDlBX,EAAIY,aAAe,CACjBjC,KAAM,EACNC,QAAS,EACTC,IAAK,GAGQmB,QC7Dfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fb534ee2.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\n  margin: 3px 0 3px 25px;\r\n\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const TotalNumber = styled.span`\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const Number = styled.span`\r\n  font-size: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Text, TotalNumber, Number } from \"./Statistics.styled\";\r\n\r\nexport const Statistic = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) => (\r\n  <div>\r\n    <Text>\r\n      Good:{\" \"}\r\n      <Number>\r\n        <TotalNumber>{good}</TotalNumber>\r\n      </Number>\r\n    </Text>\r\n    <Text>\r\n      Neutral:{\" \"}\r\n      <Number>\r\n        <TotalNumber>{neutral}</TotalNumber>\r\n      </Number>\r\n    </Text>\r\n    <Text>\r\n      Bad:{\" \"}\r\n      <Number>\r\n        <TotalNumber>{bad}</TotalNumber>\r\n      </Number>\r\n    </Text>\r\n    <Text>\r\n      Total: <Number>{total}</Number>\r\n    </Text>\r\n    <Text>\r\n      Positive feedback: <Number>{positivePercentage}%</Number>\r\n    </Text>\r\n  </div>\r\n);\r\n\r\nStatistic.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ButtonStyle = styled.button`\r\n  padding: 10px;\r\n  margin-left: 40px;\r\n  background-color: white;\r\n  border-radius: 15%;\r\n  border: 1px solid grey;\r\n\r\n  font-size: 20px;\r\n  color: black;\r\n  font-weight: 600;\r\n  text-transform: capitalize;\r\n\r\n  &:active {\r\n    background-color: blue;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ButtonStyle } from \"./FeedbackOptions.styled\";\r\n\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) =>\r\n  options.map((option) => (\r\n    <ButtonStyle\r\n      type=\"button\"\r\n      key={option}\r\n      onClick={() => onLeaveFeedback(option)}\r\n    >\r\n      {option}\r\n    </ButtonStyle>\r\n  ));\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h2`\r\n  margin: 25px;\r\n\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Title } from \"./Section.styled\";\r\n\r\nexport const Section = ({ title, children }) => (\r\n  <>\r\n    <Title>{title}</Title>\r\n    <div>{children}</div>\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\n  padding: 25px;\r\n\r\n  font-size: 32px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Text } from \"./Notification.styled\";\r\n\r\nexport const Notification = ({ message }) => <Text>{message}</Text>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\nimport { Statistic } from \"./components/Statistics/Statistics.jsx\";\nimport { FeedbackOptions } from \"./components/FeedbackOptions/FeedbackOptions.jsx\";\nimport { Section } from \"./components/Section/Section.jsx\";\nimport { Notification } from \"./components/Notification/Notification.jsx\";\n\nclass App extends Component {\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  handleIncrement = (option) => {\n    this.setState((prevState) => {\n      return {\n        [option]: prevState[option] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, bad, neutral } = this.state;\n    return good + bad + neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return Math.round((good * 100) / total);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n        {good || neutral || bad > 0 ? (\n          <Section title=\"Statistic\">\n            <Statistic\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </div>\n    );\n  }\n}\n\nApp.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}